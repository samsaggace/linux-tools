[diff]
    renames = true
[core]
    pager = less -FRSX
	editor = code --wait
    whitespace = nowarn
	excludesfile = /Users/sebastien/.gitignore_global
	attributesfile = ~/.gitattributes

[apply]
    whitespace = nowarn

[user]
	name = Seb
	email = seb.chemin@wanadoo.fr

[color]
    diff = auto
    status = auto
    branch = auto
    interactive = auto
    showbranch = auto
    grep = auto
    ui = true
    pager = true

[alias]
    st = status -uno
    stu = status
    ci = commit -v
    showd = !git diff $1^!
    br = branch
    chp = cherry-pick
    co = checkout
    df = diff
    dc = diff --cached
    dn = diff --name-only
    da = diffall
    fa = fetch --all
    std = !zenity --list --title \"Changed files\" --width=1000 --height=1000 --text \"Modified found files\" --column \"Check\" --checklist --column \"Files\" --separator=\"\n\" `git status -s | grep -v \"^??\"` | xargs git diff
    lg = log --graph --pretty=tformat:'%Cred%h%Creset -%C(auto)%d%Creset %s %Cgreen(%an %ar)%Creset'
    pom = push origin master
    changes = log --reverse --pretty=format:'%Cred%h%Creset %C(bold blue)<%an>%Creset %Cgreen(%cr)%Creset -%C(yellow)%d%Creset %s%Creset' --date=relative
    graph = log --graph --pretty=format:'%Cred%h%Creset %C(bold blue)<%an>%Creset %Cgreen(%cr)%Creset -%C(yellow)%d%Creset %s%Creset' --date=relative
    k = !gitk --branches &
    kbr = !gitk --all --simplify-by-decoration &
    info = config --list
    summary = log --oneline
    tags = tag -n1 -l
    mu = !git ls-files -v | grep ^[a-z] | awk '{print $2}'
    marked-unchanged = !git ls-files -v | grep ^[a-z] | awk '{print $2}'
    patch = diff --no-ext-diff --no-prefix -p
    ap = apply -p0
    au = update-index --assume-unchanged
    nau = update-index --no-assume-unchanged
    sw = update-index --skip-worktree
    nsw = update-index --no-skip-worktree
    msw = !git ls-files -v | grep ^S | awk '{print $2}'
    nswa = !git ls-files -v | grep ^S | awk '{print $2}' | xargs git update-index --no-skip-worktree
    graphviz = "!f() { echo 'digraph git {' ; git log --pretty='format:  %h -> { %p }' \"$@\" | sed 's/[0-9a-f][0-9a-f]*/\"&\"/g' ; echo '}'; }; f"
    diverges = !sh -c 'git rev-list --boundary $1...$2 | grep ^- | cut -c2-'
    pstash = stash show -p --no-ext-diff
    pnstash = stash show -p --name-only
    brg = !git branch | grep -v "\\\\-[0-9]\\\\{10\\\\}$"
    brclean = !git branch | grep "\\\\-[0-9]\\\\{10\\\\}$" | xargs git branch -D
    mt = mergetool
    lasttag = !sh -c 'git describe `git rev-list --tags --max-count=1`'
    del-staged = !git commit -m "TMP" && git stash && git reset --hard HEAD^ && git stash pop
    unstg = !git st -s | grep "^\\\\sM" | awk '{print $2}'
    untrk = !git stu -s | grep "^??" | awk '{print $2}'
    stg = !git st -s | grep "^M" | awk '{print $2}'
    pushow = log @{u}.. --simplify-by-decoration --decorate --oneline 
    create-remote-branch = "!f() { git fetch; git push -u origin origin/master:$1}"
	diff-image = "!f() { cd -- \"${GIT_PREFIX:-.}\"; GIT_DIFF_IMAGE_ENABLED=1 git diff \"$@\"; }; f"

[merge]
    tool = vscode
    conflictStyle = diff3
[mergetool "vscode"]
    cmd = code --wait $MERGED

[diff]
    tool = vscode
[difftool "vscode"]
    cmd = code --wait --diff $LOCAL $REMOTE

[color "status"]
    untracked = yellow
    branch = magenta

[color "branch"]
    upstream = bold blue

[push]
	default = simple
	followTags = true

[pull]
	rebase = merges

[branch "master"]
    mergeoptions = --no-ff

[grep]
	lineNumber = true
    
[fetch]
	prune = true

[url "git@github.com:"]
    insteadOf = "https://github.com/"

[rebase]
	autoStash = true
[merge "npm-merge-driver"]
	name = automatically merge npm lockfiles
	driver = npx npm-merge-driver merge %A %O %B %P
[filter "lfs"]
	clean = git-lfs clean -- %f
	smudge = git-lfs smudge -- %f
	process = git-lfs filter-process
	required = true
